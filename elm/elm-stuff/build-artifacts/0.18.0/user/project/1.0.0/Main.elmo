var _user$project$Main$init = {
	kupong: {
		ctor: '::',
		_0: {nr: '.1', sik: false, x: _user$project$Model$H},
		_1: {
			ctor: '::',
			_0: {nr: '.2', sik: false, x: _user$project$Model$H},
			_1: {
				ctor: '::',
				_0: {nr: '.3', sik: false, x: _user$project$Model$H},
				_1: {
					ctor: '::',
					_0: {nr: '.4', sik: false, x: _user$project$Model$H},
					_1: {
						ctor: '::',
						_0: {nr: '.5', sik: false, x: _user$project$Model$H},
						_1: {
							ctor: '::',
							_0: {nr: '.6', sik: false, x: _user$project$Model$H},
							_1: {
								ctor: '::',
								_0: {nr: '.7', sik: false, x: _user$project$Model$H},
								_1: {
									ctor: '::',
									_0: {nr: '.8', sik: false, x: _user$project$Model$H},
									_1: {
										ctor: '::',
										_0: {nr: '.9', sik: false, x: _user$project$Model$H},
										_1: {
											ctor: '::',
											_0: {nr: '10', sik: false, x: _user$project$Model$H},
											_1: {
												ctor: '::',
												_0: {nr: '11', sik: false, x: _user$project$Model$H},
												_1: {
													ctor: '::',
													_0: {nr: '12', sik: false, x: _user$project$Model$H},
													_1: {ctor: '[]'}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	},
	resultatKuponger: {ctor: '[]'}
};
var _user$project$Main$kupongHeaderView = {
	ctor: '::',
	_0: A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('number'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(' '),
			_1: {ctor: '[]'}
		}),
	_1: {
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('leftcell marking'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text('H'),
				_1: {ctor: '[]'}
			}),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('middlecell marking'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('U'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('rightcell marking'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('B'),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		}
	}
};
var _user$project$Main$usikre = function (tips) {
	return A2(
		_elm_lang$core$List$filter,
		function (k) {
			return _elm_lang$core$Native_Utils.eq(k.sik, false);
		},
		tips);
};
var _user$project$Main$usikreKampNr = function (tips) {
	return A2(
		_elm_lang$core$List$map,
		function (k) {
			return k.nr;
		},
		_user$project$Main$usikre(tips));
};
var _user$project$Main$combineNrAndGardering = F2(
	function (tips, kupongUtgSetups) {
		return A2(
			_elm_lang$core$List$map,
			function (ks) {
				return A3(
					_elm_lang$core$List$map2,
					F2(
						function (x, y) {
							return {nr: x, gardering: y};
						}),
					_user$project$Main$usikreKampNr(tips),
					ks);
			},
			kupongUtgSetups);
	});
var _user$project$Main$updateCurrentKamp = F3(
	function (oldKampTips, updatedKamptips, kupong) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			updatedKamptips,
			A2(
				_elm_lang$core$List$filter,
				function (k) {
					return !_elm_lang$core$Native_Utils.eq(k.nr, oldKampTips.nr);
				},
				kupong));
	});
var _user$project$Main$getCurrentKamp = F2(
	function (nr, kupong) {
		return A2(
			_elm_lang$core$List$filter,
			function (k) {
				return _elm_lang$core$Native_Utils.eq(k.nr, nr);
			},
			kupong);
	});
var _user$project$Main$updateHUB = F2(
	function (kt, kupong) {
		var kamptips = A2(_user$project$Main$getCurrentKamp, kt.nr, kupong);
		var updatedKamptips = A2(
			_elm_lang$core$List$map,
			function (k) {
				return _elm_lang$core$Native_Utils.update(
					k,
					{x: kt.x});
			},
			kamptips);
		return A3(_user$project$Main$updateCurrentKamp, kt, updatedKamptips, kupong);
	});
var _user$project$Main$updateSikkerhet = F2(
	function (kt, kupong) {
		var kamptips = A2(_user$project$Main$getCurrentKamp, kt.nr, kupong);
		var updatedKamptips = A2(
			_elm_lang$core$List$map,
			function (k) {
				return _elm_lang$core$Native_Utils.update(
					k,
					{sik: !k.sik});
			},
			kamptips);
		return A3(_user$project$Main$updateCurrentKamp, kt, updatedKamptips, kupong);
	});
var _user$project$Main$marked = F3(
	function (gameNumber, mark, kupong) {
		var kamp = A2(_user$project$Main$getCurrentKamp, gameNumber, kupong);
		return !_elm_lang$core$List$isEmpty(
			A2(
				_elm_lang$core$List$filter,
				function (k) {
					return _elm_lang$core$Native_Utils.eq(k.x, mark);
				},
				kamp));
	});
var _user$project$Main$kupongRowsView = F2(
	function (gameNumbers, kupong) {
		return A2(
			_elm_lang$core$List$map,
			function (gameNumber) {
				return A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('row'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('number'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(gameNumber),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$input,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$type_('radio'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$name(gameNumber),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onClick(
												_user$project$Model$HUBMarking(
													{nr: gameNumber, sik: false, x: _user$project$Model$H})),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$checked(
													A3(_user$project$Main$marked, gameNumber, _user$project$Model$H, kupong)),
												_1: {ctor: '[]'}
											}
										}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$input,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$type_('radio'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$name(gameNumber),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Events$onClick(
													_user$project$Model$HUBMarking(
														{nr: gameNumber, sik: false, x: _user$project$Model$U})),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$checked(
														A3(_user$project$Main$marked, gameNumber, _user$project$Model$U, kupong)),
													_1: {ctor: '[]'}
												}
											}
										}
									},
									{ctor: '[]'}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$input,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$type_('radio'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$name(gameNumber),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Events$onClick(
														_user$project$Model$HUBMarking(
															{nr: gameNumber, sik: false, x: _user$project$Model$B})),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$checked(
															A3(_user$project$Main$marked, gameNumber, _user$project$Model$B, kupong)),
														_1: {ctor: '[]'}
													}
												}
											}
										},
										{ctor: '[]'}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$input,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$type_('checkbox'),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$name(gameNumber),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Events$onClick(
															_user$project$Model$SikkerhetMarking(
																{nr: gameNumber, sik: true, x: _user$project$Model$H})),
														_1: {ctor: '[]'}
													}
												}
											},
											{ctor: '[]'}),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					});
			},
			gameNumbers);
	});
var _user$project$Main$view = function (model) {
	var rows = A2(_user$project$Main$kupongRowsView, _user$project$Model$gameNumbers, model.kupong);
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('rows'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				_user$project$Main$kupongHeaderView),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					rows),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(_user$project$Model$CreateAndShow),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('+'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(
									_elm_lang$core$Basics$toString(model.resultatKuponger)),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(
										_elm_lang$core$Basics$toString(model.kupong)),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		});
};
var _user$project$Main$markeringForKamp = F2(
	function (utgangspunkt, systemvalg) {
		var _p0 = systemvalg;
		switch (_p0.ctor) {
			case 'EnkelUtg':
				return {
					ctor: '::',
					_0: utgangspunkt,
					_1: {ctor: '[]'}
				};
			case 'HalvUtenUtg':
				return A2(
					_elm_lang$core$List$filter,
					function (x) {
						return !_elm_lang$core$Native_Utils.eq(x, utgangspunkt);
					},
					{
						ctor: '::',
						_0: _user$project$Model$H,
						_1: {
							ctor: '::',
							_0: _user$project$Model$U,
							_1: {
								ctor: '::',
								_0: _user$project$Model$B,
								_1: {ctor: '[]'}
							}
						}
					});
			default:
				return {
					ctor: '::',
					_0: _user$project$Model$H,
					_1: {
						ctor: '::',
						_0: _user$project$Model$U,
						_1: {
							ctor: '::',
							_0: _user$project$Model$B,
							_1: {ctor: '[]'}
						}
					}
				};
		}
	});
var _user$project$Main$produserKupong = F3(
	function (tips, kupongSetup, kupong) {
		produserKupong:
		while (true) {
			var _p1 = tips;
			if (_p1.ctor === '[]') {
				return kupong;
			} else {
				var _p6 = _p1._1;
				var _p5 = _p1._0;
				var _p2 = _p5.sik;
				if (_p2 === true) {
					var _v3 = _p6,
						_v4 = kupongSetup,
						_v5 = A2(
						_elm_lang$core$Basics_ops['++'],
						kupong,
						{
							ctor: '::',
							_0: {
								nr: _p5.nr,
								markeringer: A2(_user$project$Main$markeringForKamp, _p5.x, _user$project$Model$EnkelUtg)
							},
							_1: {ctor: '[]'}
						});
					tips = _v3;
					kupongSetup = _v4;
					kupong = _v5;
					continue produserKupong;
				} else {
					var _p3 = kupongSetup;
					if (_p3.ctor === '[]') {
						return kupong;
					} else {
						var _p4 = _p3._0;
						var _v7 = _p6,
							_v8 = _p3._1,
							_v9 = A2(
							_elm_lang$core$Basics_ops['++'],
							kupong,
							{
								ctor: '::',
								_0: {
									nr: _p4.nr,
									markeringer: A2(_user$project$Main$markeringForKamp, _p5.x, _p4.gardering)
								},
								_1: {ctor: '[]'}
							});
						tips = _v7;
						kupongSetup = _v8;
						kupong = _v9;
						continue produserKupong;
					}
				}
			}
		}
	});
var _user$project$Main$createKupongs = function (tips) {
	var generateHelper = F2(
		function (tips, kupongSetups) {
			return A2(
				_elm_lang$core$List$map,
				function (ks) {
					return A2(
						_elm_lang$core$List$sortBy,
						function (_) {
							return _.nr;
						},
						A3(
							_user$project$Main$produserKupong,
							tips,
							ks,
							{ctor: '[]'}));
				},
				kupongSetups);
		});
	return A2(
		generateHelper,
		tips,
		A2(_user$project$Main$combineNrAndGardering, tips, _user$project$Model$toTreTreSetup));
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p7 = msg;
		switch (_p7.ctor) {
			case 'ClearKupong':
				return {ctor: '_Tuple2', _0: _user$project$Main$init, _1: _elm_lang$core$Platform_Cmd$none};
			case 'HUBMarking':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							kupong: A2(_user$project$Main$updateHUB, _p7._0, model.kupong)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'SikkerhetMarking':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							kupong: A2(_user$project$Main$updateSikkerhet, _p7._0, model.kupong)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							resultatKuponger: _user$project$Main$createKupongs(model.kupong)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$main = _elm_lang$html$Html$program(
	{
		init: {ctor: '_Tuple2', _0: _user$project$Main$init, _1: _elm_lang$core$Platform_Cmd$none},
		view: _user$project$Main$view,
		update: _user$project$Main$update,
		subscriptions: function (s) {
			return _elm_lang$core$Platform_Sub$none;
		}
	})();
