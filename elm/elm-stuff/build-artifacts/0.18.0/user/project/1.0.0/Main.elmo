var _user$project$Main$init = {
	kupong: {ctor: '[]'}
};
var _user$project$Main$gameNumbers = {
	ctor: '::',
	_0: '1',
	_1: {
		ctor: '::',
		_0: '2',
		_1: {
			ctor: '::',
			_0: '3',
			_1: {
				ctor: '::',
				_0: '4',
				_1: {
					ctor: '::',
					_0: '5',
					_1: {
						ctor: '::',
						_0: '6',
						_1: {
							ctor: '::',
							_0: '7',
							_1: {
								ctor: '::',
								_0: '8',
								_1: {
									ctor: '::',
									_0: '9',
									_1: {
										ctor: '::',
										_0: '10',
										_1: {
											ctor: '::',
											_0: '11',
											_1: {
												ctor: '::',
												_0: '12',
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
};
var _user$project$Main$kupongHeaderView = {
	ctor: '::',
	_0: A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('number'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(' '),
			_1: {ctor: '[]'}
		}),
	_1: {
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('leftcell marking'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text('H'),
				_1: {ctor: '[]'}
			}),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('middlecell marking'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('U'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('rightcell marking'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('B'),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		}
	}
};
var _user$project$Main$kupongRowsView = function (gameNumbers) {
	return A2(
		_elm_lang$core$List$map,
		function (gameNumber) {
			return A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('row'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('number'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(gameNumber),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$input,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$type_('radio'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$name(gameNumber),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onClick(
											_user$project$Model$HUBMarking(
												{nr: gameNumber, sik: _user$project$Model$Utgangspunkt, x: _user$project$Model$H})),
										_1: {ctor: '[]'}
									}
								}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$input,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$type_('radio'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$name(gameNumber),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onClick(
												_user$project$Model$HUBMarking(
													{nr: gameNumber, sik: _user$project$Model$Utgangspunkt, x: _user$project$Model$U})),
											_1: {ctor: '[]'}
										}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$input,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$type_('radio'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$name(gameNumber),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Events$onClick(
													_user$project$Model$HUBMarking(
														{nr: gameNumber, sik: _user$project$Model$Utgangspunkt, x: _user$project$Model$B})),
												_1: {ctor: '[]'}
											}
										}
									},
									{ctor: '[]'}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$input,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$type_('checkbox'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$name(gameNumber),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Events$onClick(
														_user$project$Model$SikkerhetMarking(
															{nr: gameNumber, sik: _user$project$Model$Utgangspunkt, x: _user$project$Model$H})),
													_1: {ctor: '[]'}
												}
											}
										},
										{ctor: '[]'}),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				});
		},
		gameNumbers);
};
var _user$project$Main$view = function (model) {
	var rows = _user$project$Main$kupongRowsView(_user$project$Main$gameNumbers);
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('rows'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				_user$project$Main$kupongHeaderView),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					rows),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$updateCurrentKamp = F3(
	function (oldKampTips, updatedKamptips, kupong) {
		return A2(
			_elm_lang$core$Basics_ops['++'],
			updatedKamptips,
			A2(
				_elm_lang$core$List$filter,
				function (k) {
					return !_elm_lang$core$Native_Utils.eq(k.nr, oldKampTips.nr);
				},
				kupong));
	});
var _user$project$Main$getCurrentKamp = F2(
	function (kt, kupong) {
		return A2(
			_elm_lang$core$List$filter,
			function (k) {
				return _elm_lang$core$Native_Utils.eq(k.nr, kt.nr);
			},
			kupong);
	});
var _user$project$Main$updateHUB = F2(
	function (kt, kupong) {
		var kamptips = A2(_user$project$Main$getCurrentKamp, kt, kupong);
		var updatedKamptips = A2(
			_elm_lang$core$List$map,
			function (k) {
				return _elm_lang$core$Native_Utils.update(
					k,
					{x: kt.x});
			},
			kamptips);
		return A3(_user$project$Main$updateCurrentKamp, kt, updatedKamptips, kupong);
	});
var _user$project$Main$updateSikkerhet = F2(
	function (kt, kupong) {
		var kamptips = A2(_user$project$Main$getCurrentKamp, kt, kupong);
		var updatedKamptips = A2(
			_elm_lang$core$List$map,
			function (k) {
				return _elm_lang$core$Native_Utils.update(
					k,
					{sik: kt.sik});
			},
			kamptips);
		return A3(_user$project$Main$updateCurrentKamp, kt, updatedKamptips, kupong);
	});
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'ClearKupong':
				return {ctor: '_Tuple2', _0: _user$project$Main$init, _1: _elm_lang$core$Platform_Cmd$none};
			case 'GenerateKupong':
				return {
					ctor: '_Tuple2',
					_0: {
						kupong: {ctor: '[]'}
					},
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'HUBMarking':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							kupong: A2(_user$project$Main$updateHUB, _p0._0, model.kupong)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							kupong: A2(_user$project$Main$updateSikkerhet, _p0._0, model.kupong)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$main = _elm_lang$html$Html$program(
	{
		init: {ctor: '_Tuple2', _0: _user$project$Main$init, _1: _elm_lang$core$Platform_Cmd$none},
		view: _user$project$Main$view,
		update: _user$project$Main$update,
		subscriptions: function (s) {
			return _elm_lang$core$Platform_Sub$none;
		}
	})();
